spring:
  # 데이터베이스 설정 (RDS MySQL)
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME}?createDatabaseIfNotExist=true&useSSL=true&serverTimezone=UTC
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  # JPA 설정
  jpa:
    properties:
      hibernate:
        format_sql: false
        highlight_sql: false
        hbm2ddl.auto: create  # 프로덕션에서는 validate 사용
        default_batch_fetch_size: 100
    show-sql: false
    open-in-view: false

  # OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
            redirect-uri: ${BASE_URL}/login/oauth2/code/google

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  # AI 설정
  ai:
    anthropic:
      api-key: ${ANTHROPIC_API_KEY}
      chat:
        options:
          model: ${ANTHROPIC_MODEL:claude-3-5-sonnet-20241022}
          temperature: ${ANTHROPIC_TEMPERATURE:0.7}

  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}

# AWS S3 설정
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION:ap-northeast-2}
    s3:
      bucket: ${AWS_S3_BUCKET}
    stack:
      auto: false

# JWT 설정
jwt:
  secret-key: ${JWT_SECRET_KEY}
  access:
    expiration: ${JWT_ACCESS_EXPIRATION:3600000}
    header: Authorization
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION:1209600000}
    header: Authorization-refresh

# 로깅 설정
logging:
  level:
    org:
      hibernate:
        type: info
    thonlivethondie:
      artconnect: info
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
